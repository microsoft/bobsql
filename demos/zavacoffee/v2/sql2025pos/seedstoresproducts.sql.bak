/* ===========================================================
   Seed Data: Zava Coffee (North Richland Hills, Texas)
   Assumes DDL already created the edge schema & tables.
   Safe to re-run: cleans existing rows for this store/SKUs.
   =========================================================== */

SET NOCOUNT ON;

BEGIN TRY
    BEGIN TRAN;

    /* ---------- Guardrails ---------- */
    IF OBJECT_ID('edge.store') IS NULL OR
       OBJECT_ID('edge.pos_terminal') IS NULL OR
       OBJECT_ID('edge.product') IS NULL OR
       OBJECT_ID('edge.product_Embeddings') IS NULL OR
       OBJECT_ID('edge.inventory') IS NULL
    BEGIN
        RAISERROR('Required edge.* tables do not exist. Run the DDL first.', 16, 1);
        ROLLBACK TRAN;
        RETURN;
    END

    /* ---------- Store upsert (North Richland Hills) ---------- */
    DECLARE @StoreCode  VARCHAR(16) = 'ZV-NRH-01';
    DECLARE @StoreName  NVARCHAR(200) = N'Zava Coffee – North Richland Hills';
    DECLARE @Street     NVARCHAR(200) = N'1234 Main St';
    DECLARE @City       NVARCHAR(100) = N'North Richland Hills';
    DECLARE @State      NCHAR(2)      = N'TX';
    DECLARE @Zip        NVARCHAR(10)  = N'76180';  -- ZIP or ZIP+4 (passes REGEXP_LIKE)

    -- If store exists, delete dependent rows so the seed is repeatable
    IF EXISTS (SELECT 1 FROM edge.store WHERE store_code = @StoreCode)
    BEGIN
        DECLARE @ExistingStoreId INT = (SELECT store_id FROM edge.store WHERE store_code = @StoreCode);

        -- Remove child rows for this store
        DELETE inv
          FROM edge.inventory AS inv
         WHERE inv.store_id = @ExistingStoreId;

        DELETE pt
          FROM edge.pos_terminal AS pt
         WHERE pt.store_id = @ExistingStoreId;

        -- Remove the store
        DELETE FROM edge.store WHERE store_id = @ExistingStoreId;
    END

    INSERT INTO edge.store (store_code, store_name, StreetAddress, City, StateCode, ZipCode)
    VALUES (@StoreCode, @StoreName, @Street, @City, @State, @Zip);

    DECLARE @StoreId INT = SCOPE_IDENTITY();

    /* ---------- POS terminals ---------- */
    -- Clear any prior terminals for code collisions (defensive if SIDs differ)
    DELETE pt FROM edge.pos_terminal AS pt
     WHERE pt.store_id = @StoreId;

    INSERT INTO edge.pos_terminal (store_id, terminal_code, terminal_type, is_active)
    VALUES
        (@StoreId, 'REGISTER-01', 'REGISTER', 1),
        (@StoreId, 'REGISTER-02', 'REGISTER', 1),
        (@StoreId, 'KIOSK-01',    'KIOSK',    1);

    /* ---------- Product catalog ---------- */
    -- Define a set of SKUs we (re)seed
    IF OBJECT_ID('tempdb..#seed_skus') IS NOT NULL DROP TABLE #seed_skus;
    CREATE TABLE #seed_skus (sku VARCHAR(64) PRIMARY KEY);

    INSERT INTO #seed_skus (sku) VALUES
        ('ESP-SGL'),        -- Espresso (single)
        ('ESP-DBL'),        -- Espresso (double)
        ('LAT-12'),         -- Latte 12oz
        ('LAT-16'),         -- Latte 16oz
        ('CAP-12'),         -- Cappuccino 12oz
        ('AMER-16'),        -- Americano 16oz
        ('MOCHA-16'),       -- Mocha 16oz
        ('DRIP-12'),        -- Drip Coffee 12oz
        ('COLD-16'),        -- Cold Brew 16oz
        ('ICELAT-16'),      -- Iced Latte 16oz
        ('CHAI-16'),        -- Chai Latte 16oz
        ('MATCHA-12'),      -- Matcha Latte 12oz
        ('HTEA-EARL-12'),   -- Hot Tea Earl Grey 12oz
        ('BEAN-ETH-12'),    -- Beans: Ethiopia Yirgacheffe 12oz
        ('BEAN-HSE-2LB'),   -- Beans: House Espresso 2lb
        ('BEAN-DECAF-12'),  -- Beans: Decaf Blend 12oz
        ('PASTRY-CRSNT'),   -- Pastry: Butter Croissant
        ('PASTRY-MUF-BLU'), -- Pastry: Blueberry Muffin
        ('BAGEL-PLN'),      -- Bagel: Plain
        ('SAND-BFST'),      -- Breakfast Sandwich
        ('WATER-16'),       -- Bottled Water 16oz
        ('MUG-12Z')         -- 12oz Ceramic Mug (merch)
    ;

    -- Remove any previously seeded products (by SKU)
    DELETE p
      FROM edge.product AS p
      JOIN #seed_skus s ON s.sku = p.product_sku;

    -- Insert products (product_id chosen in a safe, reproducible range)
    INSERT INTO edge.product
    (
        product_id, product_sku, product_name, product_desc, product_attribute,
        category, list_price, tax_rate, is_active
    )
    VALUES
    (1001001, 'ESP-SGL',  N'Espresso (Single)',
     N'A concentrated 1oz shot of our house espresso: rich, syrupy, with chocolate and caramel notes.',
     CAST(N'{
       "type":"beverage","subtype":"espresso","size_oz":1,
       "notes":["chocolate","caramel","rich"],"serve":"hot","caffeine_mg":75
     }' AS JSON),
     N'Beverage', 2.50, 0.0825, 1),

    (1001002, 'ESP-DBL',  N'Espresso (Double)',
     N'Two shots of our house espresso pulled to a sweet, balanced profile, ideal on its own or as a base.',
     CAST(N'{
       "type":"beverage","subtype":"espresso","size_oz":2,
       "notes":["chocolate","caramel","balanced"],"serve":"hot","caffeine_mg":150
     }' AS JSON),
     N'Beverage', 3.25, 0.0825, 1),

    (1001003, 'LAT-12',   N'Latte (12oz)',
     N'Two shots of espresso with steamed milk, silky microfoam, and light latte art.',
     CAST(N'{
       "type":"beverage","subtype":"latte","size_oz":12,
       "milk_default":"2%","alt_milks":["oat","almond","soy"],"serve":"hot"
     }' AS JSON),
     N'Beverage', 4.75, 0.0825, 1),

    (1001004, 'LAT-16',   N'Latte (16oz)',
     N'A larger latte with two shots and extra steamed milk for a smoother, longer drink.',
     CAST(N'{
       "type":"beverage","subtype":"latte","size_oz":16,
       "milk_default":"2%","alt_milks":["oat","almond","soy"],"serve":"hot"
     }' AS JSON),
     N'Beverage', 5.25, 0.0825, 1),

    (1001005, 'CAP-12',   N'Cappuccino (12oz)',
     N'Equal parts espresso, steamed milk, and foam; light, airy, and aromatic.',
     CAST(N'{
       "type":"beverage","subtype":"cappuccino","size_oz":12,
       "foam":"high","serve":"hot"
     }' AS JSON),
     N'Beverage', 4.50, 0.0825, 1),

    (1001006, 'AMER-16',  N'Americano (16oz)',
     N'Bold espresso diluted with hot water for a smooth, long coffee with crema.',
     CAST(N'{
       "type":"beverage","subtype":"americano","size_oz":16,"serve":"hot"
     }' AS JSON),
     N'Beverage', 3.75, 0.0825, 1),

    (1001007, 'MOCHA-16', N'Mocha (16oz)',
     N'Espresso with steamed milk and dark chocolate sauce; topped with whipped cream on request.',
     CAST(N'{
       "type":"beverage","subtype":"mocha","size_oz":16,
       "chocolate":"dark","whipped_available":true,"serve":"hot"
     }' AS JSON),
     N'Beverage', 5.75, 0.0825, 1),

    (1001008, 'DRIP-12',  N'Drip Coffee (12oz)',
     N'Freshly brewed batch coffee; rotating single-origin or house blend.',
     CAST(N'{
       "type":"beverage","subtype":"drip","size_oz":12,
       "brew_method":"batch","serve":"hot"
     }' AS JSON),
     N'Beverage', 2.65, 0.0825, 1),

    (1001009, 'COLD-16',  N'Cold Brew (16oz)',
     N'12-hour steeped cold brew with low acidity and a smooth finish.',
     CAST(N'{
       "type":"beverage","subtype":"cold_brew","size_oz":16,"serve":"cold"
     }' AS JSON),
     N'Beverage', 4.25, 0.0825, 1),

    (1001010, 'ICELAT-16', N'Iced Latte (16oz)',
     N'Espresso over ice with cold milk; balanced and refreshing.',
     CAST(N'{
       "type":"beverage","subtype":"latte","size_oz":16,"serve":"cold"
     }' AS JSON),
     N'Beverage', 5.25, 0.0825, 1),

    (1001011, 'CHAI-16',  N'Chai Latte (16oz)',
     N'Spiced black tea concentrate with steamed milk; warming and aromatic.',
     CAST(N'{
       "type":"beverage","subtype":"chai_latte","size_oz":16,"serve":"hot","caffeine_mg":65
     }' AS JSON),
     N'Beverage', 5.50, 0.0825, 1),

    (1001012, 'MATCHA-12', N'Matcha Latte (12oz)',
     N'Japanese stone-ground green tea whisked with milk; vegetal, creamy, and lightly sweet.',
     CAST(N'{
       "type":"beverage","subtype":"matcha_latte","size_oz":12,"serve":"hot","caffeine_mg":70
     }' AS JSON),
     N'Beverage', 5.25, 0.0825, 1),

    (1001013, 'HTEA-EARL-12', N'Hot Tea – Earl Grey (12oz)',
     N'A classic Earl Grey with bergamot; served with hot water.',
     CAST(N'{
       "type":"beverage","subtype":"hot_tea","variety":"earl_grey","size_oz":12,"serve":"hot"
     }' AS JSON),
     N'Beverage', 2.85, 0.0825, 1),

    (1001014, 'BEAN-ETH-12', N'Whole Bean – Ethiopia Yirgacheffe (12oz)',
     N'Light roast with floral and citrus notes; tea-like body and clean finish.',
     CAST(N'{
       "type":"retail","subtype":"whole_bean","origin":"Ethiopia Yirgacheffe",
       "roast":"light","bag_size_oz":12,"notes":["floral","citrus","tea-like"]
     }' AS JSON),
     N'Beans', 16.95, 0.0825, 1),

    (1001015, 'BEAN-HSE-2LB', N'Whole Bean – House Espresso (2lb)',
     N'Balanced espresso blend designed for sweetness and body in milk drinks.',
     CAST(N'{
       "type":"retail","subtype":"whole_bean","origin":"Blend","roast":"medium","bag_size_lb":2
     }' AS JSON),
     N'Beans', 29.50, 0.0825, 1),

    (1001016, 'BEAN-DECAF-12', N'Whole Bean – Decaf Blend (12oz)',
     N'Decaffeinated blend with chocolate and nutty sweetness; water processed.',
     CAST(N'{
       "type":"retail","subtype":"whole_bean","decaf":true,"roast":"medium","bag_size_oz":12
     }' AS JSON),
     N'Beans', 15.50, 0.0825, 1),

    (1001017, 'PASTRY-CRSNT', N'Butter Croissant',
     N'Flaky, laminated butter croissant baked fresh each morning.',
     CAST(N'{
       "type":"food","subtype":"pastry","allergens":["gluten","dairy"]
     }' AS JSON),
     N'Bakery', 3.65, 0.0825, 1),

    (1001018, 'PASTRY-MUF-BLU', N'Blueberry Muffin',
     N'Classic blueberry muffin with a crunchy sugar top.',
     CAST(N'{
       "type":"food","subtype":"muffin","allergens":["gluten","egg","dairy"]
     }' AS JSON),
     N'Bakery', 3.45, 0.0825, 1),

    (1001019, 'BAGEL-PLN', N'Plain Bagel',
     N'Plain bagel served toasted on request; cream cheese available.',
     CAST(N'{
       "type":"food","subtype":"bagel","allergens":["gluten","dairy"]
     }' AS JSON),
     N'Bakery', 2.75, 0.0825, 1),

    (1001020, 'SAND-BFST', N'Breakfast Sandwich',
     N'Egg, cheddar, and bacon on a toasted brioche bun.',
     CAST(N'{
       "type":"food","subtype":"breakfast_sandwich","allergens":["gluten","egg","dairy"]
     }' AS JSON),
     N'Kitchen', 5.95, 0.0825, 1),

    (1001021, 'WATER-16', N'Bottled Water (16oz)',
     N'Still water in a recyclable bottle.',
     CAST(N'{
       "type":"retail","subtype":"bottled_water","size_oz":16
     }' AS JSON),
     N'Retail', 1.75, 0.0825, 1),

    (1001022, 'MUG-12Z', N'Zava Ceramic Mug (12oz)',
     N'White ceramic mug with Zava Coffee branding; dishwasher safe.',
     CAST(N'{
       "type":"merch","subtype":"mug","size_oz":12,"color":"white"
     }' AS JSON),
     N'Merch', 12.00, 0.0825, 1);

    /* ---------- Inventory for this store ---------- */
    -- Clear any existing inventory rows for these products & store
    DELETE inv
      FROM edge.inventory AS inv
      JOIN edge.product  AS p  ON p.product_id = inv.product_id
      JOIN #seed_skus    AS s  ON s.sku = p.product_sku
     WHERE inv.store_id = @StoreId;

    INSERT INTO edge.inventory (store_id, product_id, on_hand_qty)
    SELECT @StoreId, p.product_id,
           CASE p.product_sku
                WHEN 'ESP-SGL'        THEN 500   -- cups (made-to-order proxy)
                WHEN 'ESP-DBL'        THEN 500
                WHEN 'LAT-12'         THEN 300
                WHEN 'LAT-16'         THEN 300
                WHEN 'CAP-12'         THEN 250
                WHEN 'AMER-16'        THEN 250
                WHEN 'MOCHA-16'       THEN 200
                WHEN 'DRIP-12'        THEN 600
                WHEN 'COLD-16'        THEN 300
                WHEN 'ICELAT-16'      THEN 250
                WHEN 'CHAI-16'        THEN 180
                WHEN 'MATCHA-12'      THEN 150
                WHEN 'HTEA-EARL-12'   THEN 120
                WHEN 'BEAN-ETH-12'    THEN 40    -- bags
                WHEN 'BEAN-HSE-2LB'   THEN 20
                WHEN 'BEAN-DECAF-12'  THEN 30
                WHEN 'PASTRY-CRSNT'   THEN 60    -- pieces
                WHEN 'PASTRY-MUF-BLU' THEN 60
                WHEN 'BAGEL-PLN'      THEN 48
                WHEN 'SAND-BFST'      THEN 40
                WHEN 'WATER-16'       THEN 96    -- bottles
                WHEN 'MUG-12Z'        THEN 24    -- units
                ELSE 50
           END AS on_hand_qty
      FROM edge.product AS p
      JOIN #seed_skus   AS s ON s.sku = p.product_sku;

    /* ---------- (Optional) Embeddings note ----------
       Populate edge.product_Embeddings later by embedding product_desc,
       e.g., using Ollama (mxbai-embed-large) on edge and writing vectors:
           INSERT INTO edge.product_Embeddings(product_id, embeddings)
           SELECT p.product_id, @VectorFromModel
           FROM edge.product AS p;
    --------------------------------------------------- */

    COMMIT TRAN;
    PRINT 'Seed data loaded for store ' + @StoreCode + ' (ID=' + CAST(@StoreId AS NVARCHAR(20)) + ').';

END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0 ROLLBACK TRAN;

    DECLARE @msg NVARCHAR(4000) =
        CONCAT('Seed failed: ', ERROR_MESSAGE(), ' (', ERROR_NUMBER(), '/', ERROR_SEVERITY(), ') at line ', ERROR_LINE());
    RAISERROR(@msg, 16, 1);
END CATCH;